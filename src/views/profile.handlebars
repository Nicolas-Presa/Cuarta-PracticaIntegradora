<h1>Perfil de usuario</h1>


<h2>Bienvenido {{ user.first_name }} {{ user.last_name }} </h2>
<p>Usuario {{ user.role }} </p>

<form action="/products">
    <button type="submit"> Ver Productos </button>
</form>

<form action="/carts/{{user.cartId}}">
    <button type="submit"> Ver mi carrito </button>
</form>


<form action="/api/sessions/logout" method="get">
    <button type="submit"> Cerrar Sesion </button>
</form>


{{#if (eq user.role 'user')}}
    <button id="role__button">Cambiar a rol usuario Premium</button>
{{else if (eq user.role 'premium')}}
    <button onclick="updateRole('{{user._id}}', 'user')">Cambiar a rol usuario</button>
{{/if}}

{{#if (eq user.role 'admin')}}
    <button onclick="checkAndDeleteUsers()">Chequear y eliminar usuarios por inactividad</button>
    <button onclick="usersList()">Lista completa de usuarios</button>
{{/if}}

<script>
    const roleButton = document.querySelector('#role__button');
    roleButton.addEventListener('click', function() {
        window.location.href = '/role';
    })
</script>


<script>
function updateRole(userId, newRole) {
    fetch(`/api/users/premium/${userId}`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ role: newRole }),
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }else{
            window.location.reload();
        }
        return response.json();
    })
    .catch(error => {
        console.error('Error:', error);
    });
}
</script>

<script>
    function checkAndDeleteUsers(){
        fetch(`api/users/deleteinactiveusers`, {
            method: 'DELETE'
        })
        .then(response => {
            if(response.ok){
                window.location.reload()
            }else{
                console.error('Error en el endpoint')
            }
        })
    }
</script>

<script>
    function usersList(){
        window.location.href = '/users'
    }
</script>
